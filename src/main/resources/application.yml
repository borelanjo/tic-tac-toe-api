# Spring Boot configuration
spring:
  # Database
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_POS_URL:jdbc:postgresql://localhost:5432/tic-tac-toe?createDatabaseIfNotExist=true}
    username: ${DB_POS_USERNAME:game}
    password: ${DB_POS_PASSWORD:game}
  flyway:
    schemas:
      - game
    default-schema: game
  # JPA properties
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: false
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:127.0.0.1:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:127.0.0.1:9092}
      group-id: tic-tac-toe
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:127.0.0.1:9092}
# Logger configuration
logging:
  pattern:
    console: "%d %-5level %logger : %msg%n"
  level:
    org.springframework: ERROR
    org.hibernate: ERROR
# Server configuration
server:
  port: 8080
  sessionTimeout: 30
